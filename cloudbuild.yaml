steps:
  # 0️⃣ Létrehozzuk az .env.yaml fájlt a környezeti változókkal
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        echo "DB_NAME: digittraindb" > .env.yaml
        echo "DB_USER: root" >> .env.yaml
        echo "DB_PASS: MIshek001-1984" >> .env.yaml
        echo "DJANGO_SETTINGS_MODULE: digiTTrain.settings" >> .env.yaml
        echo "ALLOWED_HOSTS: digit-train-web-195803356854.europe-west1.run.app,digit-train.hu,www.digit-train.hu" >> .env.yaml
        echo "CLOUDSQL_CONNECTION_NAME: digittrain-projekt:europe-west1:digitrain-mysql-db-west1" >> .env.yaml
        echo "GS_BUCKET_NAME: digittrain-media-publikus-miska1984" >> .env.yaml
        echo "GS_PROJECT_ID: digittrain-projekt" >> .env.yaml
        echo "GS_LOCATION: europe-west1" >> .env.yaml
        echo "ENVIRONMENT: production" >> .env.yaml

  # 1️⃣ Docker image build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest', '.']

  # 2️⃣ Docker image push
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest']

  # 3️⃣ Migrációs job (adatbázis frissítés)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run jobs update migrate-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","migrate","--verbosity","3" \
          --env-vars-file .env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1 \
        || gcloud run jobs create migrate-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","migrate","--verbosity","3" \
          --env-vars-file .env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1

  # 4️⃣ Futtatjuk a migrate-job-ot
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - jobs
      - execute
      - migrate-job
      - --region=europe-west1

  # 5️⃣ Initial adatok betöltése (populate_initial_data)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run jobs update initial-data-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","populate_initial_data" \
          --env-vars-file .env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1 \
        || gcloud run jobs create initial-data-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","populate_initial_data" \
          --env-vars-file .env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1

  # 6️⃣ Futtatjuk az initial-data-job-ot
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - jobs
      - execute
      - initial-data-job
      - --region=europe-west1

  # 7️⃣ Deploy Cloud Run szolgáltatás
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - digit-train-web
      - --image
      - europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest
      - --region
      - europe-west1
      - --platform
      - managed
      - --allow-unauthenticated
      - --env-vars-file
      - .env.yaml
      - --add-cloudsql-instances
      - digittrain-projekt:europe-west1:digitrain-mysql-db-west1

options:
  logging: CLOUD_LOGGING_ONLY
