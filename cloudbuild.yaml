steps:
  # --- 1. Build Docker image ---
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['build', '-t', 'europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest', '.']

  # --- 2. Push image to Artifact Registry ---
  - name: 'gcr.io/cloud-builders/docker'
    args:
      ['push', 'europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest']

  # --- 3. Create or update migrate-job ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run jobs update migrate-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","migrate","--verbosity","3" \
          --env-vars-file=.env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1 \
        || \
        gcloud run jobs create migrate-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","migrate","--verbosity","3" \
          --env-vars-file=.env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1

  # --- 4. Execute migrate-job ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'jobs', 'execute', 'migrate-job', '--region=europe-west1']

  # --- 5. Create or update initial-data-job ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run jobs update initial-data-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","populate_initial_data" \
          --env-vars-file=.env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1 \
        || \
        gcloud run jobs create initial-data-job \
          --image europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest \
          --region europe-west1 \
          --command "python" \
          --args "manage.py","populate_initial_data" \
          --env-vars-file=.env.yaml \
          --set-cloudsql-instances digittrain-projekt:europe-west1:digitrain-mysql-db-west1

  # --- 6. Execute initial-data-job ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'jobs', 'execute', 'initial-data-job', '--region=europe-west1']

  # --- 7. Deploy Cloud Run service ---
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run', 'deploy', 'digit-train-web',
        '--image', 'europe-west1-docker.pkg.dev/digittrain-projekt/digittrain-web/app:latest',
        '--region', 'europe-west1',
        '--platform', 'managed',
        '--allow-unauthenticated',
        '--env-vars-file=.env.yaml',
        '--add-cloudsql-instances', 'digittrain-projekt:europe-west1:digitrain-mysql-db-west1'
      ]

options:
  logging: CLOUD_LOGGING_ONLY
