# billing/middleware.py

from django.shortcuts import render
from django.utils.deprecation import MiddlewareMixin
from django.conf import settings
from .context_processors import ad_free_status # <-- A helyes f√ºggv√©nynevet import√°ljuk

class InterstitialAdMiddleware(MiddlewareMixin):
    """
    Ez a middleware egy √°tmeneti (interstitial) hirdet√©si oldalt jelen√≠t meg
    minden N. k√©r√©s ut√°n, HA a felhaszn√°l√≥ NEM hirdet√©smentes.
    A sz√°ml√°l√≥t a felhaszn√°l√≥ session-j√©ben t√°rolja.
    """
    
    REQUEST_COUNTER_KEY = 'ad_interstitial_count'
    REQUEST_LIMIT = 3 # P√©lda: minden 3. oldalbet√∂lt√©sn√©l jelenik meg a hirdet√©s
    
    # Azon √∫tvonalak, amiket figyelmen k√≠v√ºl hagyunk (pl. API h√≠v√°sok, statikus f√°jlok)
    EXCLUDE_PATHS = [
        '/admin/', 
        '/static/', 
        '/media/', 
        '/billing/run-algorithm/', 
        '/billing/ad-for-credit/',
        '/billing/toggle-ad-free/',
        # üí• FONTOS KIZ√ÅR√ÅSOK a bejelentkez√©si, regisztr√°ci√≥s √©s kil√©p√©si oldalakhoz
        '/users/login/',    # Kiz√°rja a login oldalt (√©s az arra ir√°nyul√≥ POST k√©r√©st)
        '/users/logout/',   # Kiz√°rja a logout √∫tvonalat
        '/users/register/', # Kiz√°rja a regisztr√°ci√≥s oldalt
        '/logout/',         # Esetleges m√°s logout √∫tvonal
        '/login/',          # Esetleges m√°s login √∫tvonal (biztos, ami biztos)
        '/register/',       # Esetleges m√°s regisztr√°ci√≥s √∫tvonal
        '/index/',
        '/main_page/',

    ]
    
    def process_request(self, request):
        
        # 1. Kiz√°r√°sok ellen≈ërz√©se (ne jelenjen meg admin oldalon, stb.)
        for path in self.EXCLUDE_PATHS:
            if request.path.startswith(path):
                return None 
        
        # 2. Hirdet√©smentes st√°tusz ellen≈ërz√©se
        # A ad_free_status(request) f√ºggv√©nyt h√≠vjuk meg (context_processors.py)
        is_ad_free = ad_free_status(request)['is_ad_free'] 
        
        # Csak akkor foglalkozunk a sz√°ml√°l√°ssal √©s a hirdet√©ssel, ha be van jelentkezve √âS NEM hirdet√©smentes
        if request.user.is_authenticated and not is_ad_free:
            
            # 3. K√©r√©ssz√°ml√°l√≥ kezel√©se a session-ben
            # Lek√©rj√ºk a sz√°ml√°l√≥t, alap√©rtelmezett √©rt√©ke 0, ha nincs m√©g session-ben
            current_count = request.session.get(self.REQUEST_COUNTER_KEY, 0)
            current_count += 1
            # Vissza√≠rjuk a n√∂velt √©rt√©ket a session-be
            request.session[self.REQUEST_COUNTER_KEY] = current_count
            
            # 4. Megjelen√≠t√©si limit ellen≈ërz√©se
            if current_count >= self.REQUEST_LIMIT:
                
                # Vissza√°ll√≠tjuk a sz√°ml√°l√≥t a hirdet√©s megjelen√≠t√©se ut√°n
                request.session[self.REQUEST_COUNTER_KEY] = 0 
                
                # √Åtmeneti oldal megjelen√≠t√©se (ez megszak√≠tja az eredeti k√©r√©s feldolgoz√°s√°t!)
                return render(request, 'billing/interstitial_ad.html', {})
                
        # Ha a felhaszn√°l√≥ hirdet√©smentes, vagy nincs bejelentkezve, vagy a sz√°ml√°l√≥ alatt van, tov√°bbengedj√ºk.
        return None