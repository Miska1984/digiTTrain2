"""
Django settings for digiTTrain project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', "django-insecure-gd_25j*vos)xlnio1ja2m=ne=z18z)nt3f1@u@$l%(t!uif9uk")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG') == 'True'

ALLOWED_HOSTS = [
    'localhost', 
    '127.0.0.1',
    'www.digit-train.hu',
    'digit-train.hu',    
    ]

# Cloud Run/Codespaces specifikus be치ll칤t치sok
if os.getenv('GAE_APPLICATION') or os.getenv('CODESPACES'):
    ALLOWED_HOSTS.append(os.getenv('ALLOWED_HOST', ''))
    ALLOWED_HOSTS.append(os.getenv('GITHUB_CODESPACES_PORT_FORWARDING_URL', '').lstrip('https://'))
    USE_X_FORWARDED_HOST = True

# Application definition

INSTALLED_APPS = [
    "users.apps.UsersConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    'django_healthchecks',
    "django.contrib.staticfiles",
    'django.contrib.sites', 
    'django.contrib.humanize',
    'crispy_forms',
    'crispy_bootstrap5',
    "storages",
    'core',
    'biometric_data',
    'data_sharing',
    'assessment',
    'training_log', 
    'diagnostics',
    'diagnostics_jobs',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

SHAREABLE_DATA_MODELS = {
    'biometric_data': [
        'WeightData',
        'HRVandSleepData',
        'WorkoutFeedback',
        'RunningPerformance',
    ],
}

ROOT_URLCONF = "digiTTrain.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "digiTTrain.wsgi.application"

# Database
# A DATABASES be치ll칤t치s most m치r a development.py vagy a production.py f치jlb칩l t칬lt콈dik be
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "hu-hu"

TIME_ZONE = 'Europe/Budapest'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


LOGIN_REDIRECT_URL = 'core:main_page'

# Egyedi User modell
# Egyedi User modell
AUTH_USER_MODEL = "users.User"

import logging
logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)

ENVIRONMENT = os.environ.get('ENVIRONMENT', 'development').strip().lower()
DJANGO_SETTINGS_MODULE = os.environ.get('DJANGO_SETTINGS_MODULE', 'Not set')

logger.info("游댢 Django settings inicializ치lva")
logger.info(f"游깴 ENVIRONMENT: {ENVIRONMENT}")
logger.info(f"丘뙖잺 DJANGO_SETTINGS_MODULE: {DJANGO_SETTINGS_MODULE}")

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# ===== ALAP칄RTELMEZETT STORAGE BE츼LL칈T츼SOK =====
# Ezek mindig l칠teznek, 칤gy elker칲lhet콈 a "nincs attrib칰tum" hiba
# DEFAULT_FILE_STORAGE = "django.core.files.storage.FileSystemStorage"
# STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

# logger.info(f"游닍 (BASE) DEFAULT_FILE_STORAGE: {DEFAULT_FILE_STORAGE}")
# logger.info(f"游닍 (BASE) STATICFILES_STORAGE: {STATICFILES_STORAGE}")

MIGRATION_MODULES = {
    "django_healthchecks": None,
}

# 칔J: A Sites keretrendszer be치ll칤t치sa
SITE_ID = 1

# A levelez콈 be치ll칤t치sok hozz치ad치sa
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
# 游뚿 BIZTONS츼G: Jelsz칩 bet칬lt칠se k칬rnyezeti v치ltoz칩b칩l.
# Az os.environ.get('EMAIL_PASSWORD', '...') a r칠gi k칩dban szerepl콈 jelsz칩t haszn치lja fallbackk칠nt a helyi/fejleszt콈i tesztel칠shez.
EMAIL_HOST_USER = os.environ.get('EMAIL_USER', 'digittrain.2025@gmail.com')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD', 'nikq tpau pwyk nbvl')
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER

FORM_RENDERER = 'django.forms.renderers.DjangoTemplates'

